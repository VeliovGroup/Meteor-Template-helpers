head
  meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
  title Meteor template helpers demo

body
  a(href='https://github.com/VeliovGroup/Meteor-Template-helpers')
    img.gh-ribbon(src='https://camo.githubusercontent.com/365986a132ccd6a44c23a9169022c0b5c890c387/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f7265645f6161303030302e706e67' alt='Fork me on GitHub' data-canonical-src='https://s3.amazonaws.com/github/ribbons/forkme_right_red_aa0000.png')
  .container-fluid: .row: .col-md-12
    header: h2 Meteor template helpers demo
    hr
    +demo

template(name="demo")
  table.table.table-bordered.table-striped
    thead
      tr: th(colspan="4") Comparison operators
      tr
        th Result (expected <code>true</code>)
        th Comparison Operator
        th JS Comparison
        th Template Code
    tbody
      tr
        td
          if compare 2 '>' 1
            code true
        td
          code >
          br
          small: strong aliases:
          code gt
          code greaterThan
        td: code (a > b)
        td: code if compare 2 '>' 1
      tr
        td
          if compare 2 '>=' 2
            code true
        td
          code >=
          br
          small: strong aliases:
          code gte
          code greaterThanEqual
        td: code (a >= b)
        td: code if compare 2 '>=' 2
      tr
        td
          if compare 1 '<' 2
            code true
        td
          code &lt;
          br
          small: strong aliases:
          code lt
          code lessThan
        td: code (a &lt; b)
        td: code if compare 1 '&lt;' 2
      tr
        td
          if compare 2 '<=' 2
            code true
        td
          code &lt;=
          br
          small: strong aliases:
          code lte
          code lessThanEqual
        td: code (a &lt;= b)
        td: code if compare 2 '&lt;=' 2
      tr
        td
          if compare true '===' true
            code true
        td
          code ===
          br
          small: strong alias:
          code is
        td: code (a === b)
        td: code if compare true '===' true
      tr
        td
          if compare true '!==' false
            code true
        td
          code !==
          br
          small: strong alias:
          code isnt
        td: code (a !== b)
        td: code if compare true '!==' false
      tr
        td
          if compare 1 '==' '1'
            code true
        td
          code ==
          br
          small: strong alias:
          code isEqual
        td: code (a == b)
        td: code if compare 1 '==' '1'
      tr
        td
          if compare 2 '!=' '1'
            code true
        td
          code !=
          br
          small: strong alias:
          code isNotEqual
        td: code (a != b)
        td: code if compare 2 '!=' '1'
      tr
        td
          if compare 2 '&&' '1'
            code true
        td
          code &&
          br
          small: strong alias:
          code and
        td: code (a && b)
        td: code if compare 2 '&&' '1'
      tr
        td
          if compare 2 '&!' 0
            code true
        td: code &!
        td: code (a && !b)
        td: code if compare 2 '&!' 0
      tr
        td
          if compare false '!&' true
            code true
        td: code !&
        td: code (!a && b)
        td: code if compare false '!&' true
      tr
        td
          if compare false '!&!' false
            code true
        td: code !&!
        td: code (!a && !b)
        td: code if compare false '!&!' false
      tr
        td
          if compare false 'nand' false
            code true
        td
          code nand
          br
          small: strong alias:
          code !&&
        td: code !(a && b)
        td: code if compare false 'nand' false
      tr
        td
          if compare false '||' true
            code true
        td
          code ||
          br
          small: strong alias:
          code or
        td: code (a || b)
        td: code if compare false '||' true
      tr
        td
          if compare 2 '|!' 0
            code true
        td: code |!
        td: code (a || !b)
        td: code if compare 2 '|!' 0
      tr
        td
          if compare false '!|' true
            code true
        td: code !|
        td: code (!a || b)
        td: code if compare false '!|' true
      tr
        td
          if compare false '!|!' false
            code true
        td: code !|!
        td: code (!a || !b)
        td: code if compare false '!|!' false
      tr
        td
          if compare false 'nor' false
            code true
        td
          code nor
          br
          small: strong alias:
          code !||
        td: code !(a || b)
        td: code if compare false 'nor' false
      tr
        td
          if compare false 'xor' true
            code true
        td: code xor
        td: code ((a && !b) || (!a && b))
        td: code if compare false 'xor' true
      tr
        td
          if compare true 'nxor' true
            code true
        td: code nxor
        td: code !((a && !b) || (!a && b))
        td: code if compare true 'nxor' true
      tr
        td
          unless compare 'abc' 'notexists' 'cde'
            small 
              | Non-existent operator always returns 
              code false
        td
          code notexists
          span &nbsp;
          small Non-existent operator will throw an error to console, go check it.
        td -
        td: code unless compare 'abc' 'notexists' 'cde'
    thead
      tr: th(colspan="4") Comparison combinations
    tbody
      tr
        td
          if compare 9 '<' 12 '<' 15
            code true
        td -
        td: code (a &lt; b &lt; c)
        td: code if 9 '&lt;' 12 '&lt;' 15
      tr
        td
          unless compare 9 '<' 12 '<' 11
            code true
        td -
        td: code (a &lt; b &lt; c)
        td: code unless 10 '&lt;' 12 '&lt;' 15
      tr
        td
          if compare 10 '<' 20 '<' 30
            code true
        td -
        td: code (a &lt; b &lt; c)
        td: code if 10 '&lt;' 20 '&lt;' 30
      tr
        td
          if compare true '&&' true '&!' false '|!' false
            code true
        td -
        td: code (a && b && !c || !d)
        td: code if compare true '&&' true '&!' false '|!' false
      tr
        td
          if compare false '||' false 'or' false '||' false 'or' true
            code true
        td -
        td: code ([a || b ..])
        td: code if compare false '||' false 'or' false '||' false 'or' true
      tr
        td
          if compare 1 '>' 2 '||' 5 '<' 8
            code true
        td -
        td: code (a > b || c &lt; d)
        td: code if compare 1 '>' 2 'or' 5 '&lt;' 8
      tr
        td
          unless compare 1 '>' 2 'and' 5 '<' 8
            code true
        td -
        td: code (a > b and c &lt; d)
        td: code unless compare 1 '>' 2 'and' 5 '&lt;' 8

      tr: td(colspan="4"): hr

    thead
      tr: th(colspan="4") Session helpers
      tr
        th Result
        th Arguments
        th Comment
        th Template Code
    tbody
      tr
        td {{Session 'key'}}
        td: code 'key'
        td: small Get non-existent key
        td: code Session 'key'
      tr
        td {{Session '_key' set="_value"}}
        td
          code '_key'
          code set="_value"
        td 
          small
            | Set value, 
            code set
            | method returns
            code undefined
        td: code Session '_key' set="_value"
      tr
        td {{Session '_key'}}
        td: code '_key'
        td: small Get value by session key
        td: code Session '_key'

      tr: td(colspan="4"): hr

    thead
      tr: th(colspan="4") Underscore helpers
      tr
        th Result
        th Arguments
        th Comment
        th Template Code
    tbody
      tr
        td {{_ 'isString' '_string_'}}
        td
          code 'isString'
          code '_string_'
        td -
        td: code _ 'isString' '_string_'
      tr
        td {{_ 'isArray' array}}
        td
          code 'isArray'
          code array
          small (defined in helper)
        td
          small 
            | Original array is 
            code [1,2,3,4,5,6]
        td: code _ 'isArray' array
      tr
        td 
          if _ 'isArray' array
            code true
        td
          code 'isArray'
          code array
          small (defined in helper)
        td
          small 
            | Original array is 
            code [1,2,3,4,5,6]
        td: code _ 'isArray' array
      tr
        td 
          each _ 'uniq' arrayWithDuplicates
            code #{this}
        td
          code 'uniq'
          code arrayWithDuplicates
          small (defined in helper)
        td
          small 
            | Original array is 
            code [1,1,2,2,5,5,5]
        td: code each _ 'uniq' arrayWithDuplicates

      tr: td(colspan="4"): hr

    thead
      tr: th(colspan="4") Log and Debug helper
      tr
        th Result
        th Arguments
        th Comment
        th Template Code
    tbody
      tr
        td 
          pre {{log 'string' array argument=arrayWithDuplicates}}
        td
          code 'string'
          code array
          code argument=arrayWithDuplicates
        td: small See console output
        td: code log 'string' array argument=arrayWithDuplicates

